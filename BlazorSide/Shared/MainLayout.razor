@using BlazorSide.Pages
@using BlazorLoginApp.Authentication
@using BlazorSide.UIComponents
@using Contracts
@using Entities
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Calendars
@using StateContainer
@inherits LayoutComponentBase
@inject NavigationManager navMgr;
@inject IAuthService _authService;
@inject  IUserService _userService
@inject IVisitService _VisitService
@inject IModalService _modalService

<PageTitle>BlazorSide</PageTitle>
<AuthorizeView>
    <Authorized Context="Auth">
        <NavMenu/>
        <div class="row h-100 ">
            <div class="mt-5  h-100  col-md-3 col-sm-2">
                <SideBar></SideBar>
            </div>
            <div class="col-md-9" style="margin-top:6rem; ">
                @Body
            </div>
        </div>
        
  
    </Authorized>
    <NotAuthorized>

        <div class="d-flex  flex-column align-content-center flex-wrap" style="margin-top: 1rem;">
            <h3 class="align-self-center">Prison System</h3>
            <br/>
            <img class="align-self-center " src="img/logo.png" height="100" width="100"/>
            <hr/>
            <br/>

            <!-- Pills navs -->
            <ul class="nav nav-pills nav-justified mb-3" id="ex1" role="tablist">
                <li class="nav-item" role="presentation">
                    <a
                        class="nav-link active"
                        id="tab-login"
                        data-mdb-toggle="pill"
                        href="#pills-login"
                        role="tab"
                        aria-controls="pills-login"
                        aria-selected="true">Login</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a
                        class="nav-link"
                        id="tab-register"
                        data-mdb-toggle="pill"
                        href="#pills-visit"
                        role="tab"
                        aria-controls="pills-register"
                        aria-selected="false">Visitors</a>
                </li>
            </ul>
            <!-- Pills navs -->
            <div class="tab-content">
                <div class="tab-pane fade show active" id="pills-login" role="tabpanel" aria-labelledby="tab-login">
                    <div class="text-center mb-3">
                        <pre>_____________________________________________</pre>
                    </div>
                    <div class="form-outline mb-4">
                        <input type="text" @bind="userName" id="userName" class="form-control"/>
                        <label class="form-label" for="userName">Username</label>
                    </div>
                    <div class="form-outline mb-4">
                        <input type="password" @bind="password" id="Pass" class="form-control"/>
                        <label class="form-label" for="Pass">Password</label>
                    </div>

                    <!-- 2 column grid layout -->
                    <div class="row mb-3">
                        <div class="col-md-6 d-flex justify-content-center">
                            <!-- Checkbox -->
                            <div class="form-check mb-3 mb-md-0">
                                <input class="form-check-input" type="checkbox" value="" id="loginCheck" checked/>
                                <label class="form-check-label" for="loginCheck">Remember me</label>
                            </div>
                        </div>

                        <div class="col-md-6 d-flex justify-content-center">
                            <!-- Simple link -->
                            <a href="#!">Forgot password?</a>
                        </div>
                    </div>
                    
                    <!-- Submit button -->
                    <button type="submit" @onclick="LoginAsync" class="btn btn-primary btn-block mb-4">Sign in</button>
                </div>

                <div class="tab-pane fade" id="pills-visit" role="tabpanel" aria-labelledby="tab-visit">
                    <div class="text-center mb-3">
                        <pre>_____________________________________________</pre>
                    </div>

                    <div class="form mb-4">
                        <input type="text" @bind="newVisit.FirstName" id="FirstName" class="form-control"/>
                        <label class="form-label" for="FirstName">First Name</label>
                    </div>

                    <div class="form mb-4">
                        <input type="text" @bind="newVisit.LastName" id="LastName" class="form-control"/>
                        <label class="form-label" for="LastName">Last Name</label>
                    </div>

                    <div class="form mb-4">
                        <input type="email" @bind="newVisit.Email" id="Email" class="form-control"/>
                        <label class="form-label" for="Email">Email</label>
                    </div>

                    <div class="form- mb-4">
                        <input type="text" @bind="newVisit.PrisonerSsn" id="Ssn" class="form-control"/>
                        <label class="form-label" for="Ssn">Inmate Social Security Number:</label>
                    </div>

                    <div class="form- mb-4">
                        <SfDatePicker ID="Date-visit" TValue="DateTime?" Placeholder="Choose a Date" ShowClearButton="true" @bind-Value="@SelectedDate">
                            <DatePickerEvents TValue="DateTime?" OnRenderDayCell="@DisableDays"></DatePickerEvents>
                        </SfDatePicker>
                        <label for="Date-visit" class="text-white"> Visit Date</label>
                    </div>

                    <div class="form- mb-4">
                        <SfTimePicker ID="visit-time" TValue="DateTime?" @bind-value="@SelectedTime" Min="@MinVal" Max="@MaxVal" Step=30 Format="HH:mm"></SfTimePicker>
                        <label for="visit-time" class="text-white"> Visit Time</label>
                    </div>

                    <div class="form-check d-flex justify-content-center mb-4">
                        <input
                            class="form-check-input me-2"
                            type="checkbox"
                            value=""
                            id="registerCheck"
                            checked
                            aria-describedby="registerCheckHelpText"/>
                        <label class="form-check-label" for="registerCheck">
                            I have read and agree to the terms
                        </label>
                    </div>
                    
                    <!-- Submit button -->
                    <button type="submit" @onclick="VisitRequest" class="btn btn-primary btn-block mb-3">Request visit</button>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@if (!string.IsNullOrEmpty(errorLabel))
                    {
                        <div >
                            <label style="color: red">
                                @errorLabel
                            </label>
                        </div>
                    }

@code {
    private string userName;
    private string password;
    private string errorLabel;
    private bool modal;
    private bool isGuard;
    
    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await _authService.LoginAsync(userName, password);
            User? loggedUser = await _userService.GetUserAsync(userName);
            if (loggedUser.Role == "guard")
            {
                navMgr.NavigateTo("/GuardIndex");
            }
            else{navMgr.NavigateTo("/");}
        }
        catch (Exception e)
        {
            errorLabel = $"Error:"+e.Message;
        }
    }
    
    private DateTime? SelectedDate { get; set; }
    private DateTime MinVal { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 15, 15, 00, 00);
    private DateTime MaxVal { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 15, 18, 30, 00);
    private DateTime? SelectedTime { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 15, 15, 00, 00);

    private Visit newVisit = new Visit();
    [CascadingParameter]
    private IModalService Modal { get; set; }
    
    private async Task VisitRequest()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(MessageModal.Message),"Visit requested successfully. You will receive an e-mail confirmation within 48hs");
        parameters.Add(nameof(MessageModal.OkButton),"Ok");
        
        try
        {
            Console.Write(newVisit);
            newVisit.VisitDate = (DateTime) SelectedDate;
            newVisit.VisitTime = (DateTime) SelectedTime;
            await _VisitService.CreateVisitAsync(newVisit);
            newVisit = new Visit();
            var modalRef = _modalService.Show<MessageModal>("Success",parameters);
            var result = await modalRef.Result;
            if (!result.Cancelled)
            {
                string? message;
                message = result.Data?.ToString() ?? string.Empty;
                switch (message)
                {
                    case "Ok":
                    {
                        navMgr.NavigateTo("/");
                        break;
                    }
                }
            }
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
        }
    }
    
    private static void DisableDays(RenderDayCellEventArgs args) { 
        if ((int)args.Date.DayOfWeek == 0 || (int)args.Date.DayOfWeek == 2 ||
            (int)args.Date.DayOfWeek == 4 || (int)args.Date.DayOfWeek == 6) { 
            args.IsDisabled = true; 
        } 
    }
}