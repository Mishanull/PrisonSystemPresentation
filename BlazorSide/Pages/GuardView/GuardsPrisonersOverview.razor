@page "/GuardsPrisonersOverview"
@using Contracts
@using Entities
@using BlazorSide.UIComponents
@inject IPrisonerService prisonerService
@inject NavigationManager _navMgr
@inject IModalService _modalService
@attribute [Authorize(Policy = "GuardAccess")]


<div class="row mt-5">
    <div class="d-flex flex-row mb-3">
        <div class="p-2">
            <input class="form-control" type="text" placeholder="Filter..."
                   @bind="Filter"
                   @bind:event="oninput">
        </div>
    </div>
    <div class="d-flex flex-column align-items-center ">
        <div class="card text-center overflow-y-scroll " style="height: 40rem;">
            <h5 class="card-header bg-info text-white">Inmates</h5>
            <table class="table  table-hover align-middle mb-0 bg-white" style="position: relative; ">
                <thead class="bg-info">
                <tr class="text-uppercase text-white">
                    <th scope="col">First name</th>
                    <th scope="col">Last name</th>
                    <th scope="col">Ssn</th>
                    <th scope="col">Crime commited</th>
                    <th scope="col">Sector</th>
                    <th scope="col">Status</th>
                    <th scope="col">Actions</th>
                </tr>
                </thead>
                @if (prisoners!.Any())
                {
                    <tbody>
                    @foreach (var p in prisoners!.Where(IsVisible))
                    {
                        <tr>

                            <td>
                                <div class="d-flex align-items-center">
                                    <img
                                        src="img/download.png"
                                        class="rounded-circle"
                                        alt=""
                                        style="width: 45px; height: 45px"/>
                                    <div class="ms-3">
                                        <p class="fw-bold mb-1">@p.FirstName</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="ms-3">
                                        <p class=" mb-1">@p.LastName</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="ms-3">
                                        <p class=" mb-1">@p.Ssn</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="ms-3">
                                        <p class=" mb-1">@p.CrimeCommitted</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="ms-3">
                                        <p class=" mb-1">####</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="badge badge-warning rounded-pill d-inline">Imprisoned</span>
                            </td>

                            <td>
                                <a @onclick="@(() => { _navMgr.NavigateTo("/PrisonerDetail/" + @p.Id); })">
                                    <button
                                        type="button"
                                        class="btn btn-link btn-rounded btn-sm fw-bold"
                                        data-mdb-ripple-color="dark">
                                        Edit
                                    </button>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                }
            </table>
        </div>
    </div>
</div>
@code {
    private ICollection<Prisoner>? prisoners;
    private string Filter { get; set; }
    
    protected  override async Task OnInitializedAsync()
    {
        try
        {
            prisoners = await prisonerService.GetPrisonersAsync(1, 2);
        }
        catch (Exception e)
        {
            var paramet = new ModalParameters();
            paramet.Add(nameof(ErrorModal.Message),e.Message);
            _modalService.Show<ErrorModal>("Error",paramet);
        }
    }

    private bool IsVisible(Prisoner prisoner)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (prisoner.FirstName.Contains(Filter, StringComparison.OrdinalIgnoreCase)
            || prisoner.LastName.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (prisoner.Ssn.ToString().StartsWith(Filter) || prisoner!.Sector!.Id.ToString().StartsWith(Filter))
            return true;

        return false;
    }

}