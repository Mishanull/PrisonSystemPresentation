@page "/AddPrisoner"

@using Entities
@using Contracts

@inject IPrisonerService prisonerService
@inject NavigationManager navMgr

<div class="container-fluid w-50 align-self-center p-3 mx-5" style="background-color:#41B3D3; border-radius: 5px; ">
    <EditForm Model="@_newPrisoner" OnValidSubmit="@AddPrisonerAsync">
        <DataAnnotationsValidator/> 
        <ValidationSummary/>
        <h3>Add Prisoner:</h3>
        <div class="row">
            <div class="col-md-6"><InputText @bind-Value="_newPrisoner.FirstName" class="form-control form-control-lg" type="text" placeholder="First Name"/></div>
            <div class="col-md-6"><InputText @bind-Value="_newPrisoner.LastName" class="form-control form-control-lg" type="text" placeholder="Last Name"/></div>
        </div>
        <br/>
        <InputNumber @bind-Value="_newPrisoner.Ssn" class="form-control" placeholder="SSN" />
        <br/>  
        <InputText @bind-Value="_newPrisoner.CrimeCommitted" class="form-control" placeholder="Crime committed" rows="4"/>
        <br/>
        <InputText @bind-Value="_newPrisoner.Note" class="form-control" placeholder="Note" rows="4"/>
        <br/>
        @if (!string.IsNullOrEmpty(errorLabel))
        {
            <div class="field">
                <label style="color: red">
                    @errorLabel
                </label>
            </div>
        }
        <button class="btn btn-white" type="submit">Add New Prisoner</button>
    </EditForm>
</div>

@code {
    private string errorLabel = "";
    private Prisoner _newPrisoner = new Prisoner();
    
    
    private async Task AddPrisonerAsync()
    {
        errorLabel = "";

        if (_newPrisoner.Ssn < 100)
        {
            errorLabel += "-invalid SSN [<100???]!\n";
        }
        if (string.IsNullOrEmpty(_newPrisoner.FirstName))
        {
            errorLabel += "-field 'First name' must not be empty!\n";
        }
        if (string.IsNullOrEmpty(_newPrisoner.LastName))
        {
            errorLabel += "-field 'Last name' must not be empty!\n";
        }
        if (string.IsNullOrEmpty(_newPrisoner.CrimeCommitted))
        {
            errorLabel += "-field 'Crime committed' must not be empty!\n";
        }
        if (string.IsNullOrEmpty(_newPrisoner.Note))
        {
            _newPrisoner.Note = "";
        }

        if (string.IsNullOrEmpty(errorLabel))
        {
            try
            {
                await prisonerService.CreatePrisonerAsync(_newPrisoner);
                navMgr.NavigateTo("/PrisonersOverview");
            }
            catch (Exception e)
            {                
                errorLabel = e.Message;
            }
        }
    }
}